// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.fr');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Ajouter un commentaire";
Blockly.Msg.AUTH = "Veuillez autoriser cette application à permettre la sauvegarde de votre travail et à l’autoriser à la partager.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Modifier la valeur :";
Blockly.Msg.CHAT = "Discuter avec votre collaborateur en tapant dans cette zone !";
Blockly.Msg.CLEAN_UP = "Nettoyer les blocs";
Blockly.Msg.COLLAPSE_ALL = "Réduire les blocs";
Blockly.Msg.COLLAPSE_BLOCK = "Réduire le bloc";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "couleur 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "couleur 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "ratio";
Blockly.Msg.COLOUR_BLEND_TITLE = "mélanger";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Mélange deux couleurs avec un ratio donné (de 0.0 à 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://fr.wikipedia.org/wiki/Couleur";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choisir une couleur dans la palette";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "couleur aléatoire";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choisir une couleur au hasard.";
Blockly.Msg.COLOUR_RGB_BLUE = "bleu";
Blockly.Msg.COLOUR_RGB_GREEN = "vert";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rouge";
Blockly.Msg.COLOUR_RGB_TITLE = "colorer avec";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Créer une couleur avec la quantité de rouge, vert et bleu. Les valeurs doivent être comprises entre 0 et 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "sortir de la boucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continuer avec la prochaine itération de la boucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Sortir de la boucle englobante.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Sauter le reste de cette boucle, et poursuivre avec l’itération suivante.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Attention : Ce bloc ne devrait être utilisé que dans une boucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "pour chaque élément %1 dans la liste %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Pour chaque élément dans une liste, donner la valeur de l’élément à la variable '%1', puis exécuter certains ordres.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "compter avec %1 de %2 à %3 par %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Faire en sorte que la variable « %1 » prenne les valeurs depuis le numéro de début jusqu’au numéro de fin, en s’incrémentant de l’intervalle spécifié, et exécuter les ordres spécifiés.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Ajouter une condition au bloc si.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Ajouter une condition finale fourre-tout au bloc si.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Ajouter, supprimer ou réordonner les sections pour reconfigurer ce bloc si.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sinon";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sinon si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si une valeur est vraie, alors exécuter certains ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si une valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, exécuter le second bloc d’ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si la première valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, si la seconde valeur est vraie, exécuter le second bloc d’ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si la première valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, si la seconde valeur est vraie, exécuter le second bloc d’ordres. Si aucune des valeurs n’est vraie, exécuter le dernier bloc d’ordres.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http://fr.wikipedia.org/wiki/Boucle_for";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "faire";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "répéter %1 fois";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Exécuter certains ordres plusieurs fois.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "répéter jusqu’à";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "répéter tant que";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Tant qu’une valeur est fausse, alors exécuter certains ordres.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Tant qu’une valeur est vraie, alors exécuter certains ordres.";
Blockly.Msg.DELETE_BLOCK = "Supprimer le bloc";
Blockly.Msg.DELETE_X_BLOCKS = "Supprimer %1 blocs";
Blockly.Msg.DISABLE_BLOCK = "Désactiver le bloc";
Blockly.Msg.DUPLICATE_BLOCK = "Dupliquer";
Blockly.Msg.ENABLE_BLOCK = "Activer le bloc";
Blockly.Msg.EXPAND_ALL = "Développer les blocs";
Blockly.Msg.EXPAND_BLOCK = "Développer le bloc";
Blockly.Msg.EXTERNAL_INPUTS = "Entrées externes";
Blockly.Msg.HELP = "Aide";
Blockly.Msg.INLINE_INPUTS = "Entrées en ligne";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "créer une liste vide";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Renvoyer une liste, de longueur 0, ne contenant aucun enregistrement";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Ajouter, supprimer, ou réordonner les sections pour reconfigurer ce bloc de liste.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "créer une liste avec";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Ajouter un élément à la liste.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Créer une liste avec un nombre quelconque d’éléments.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "premier";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# depuis la fin";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "obtenir";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtenir et supprimer";
Blockly.Msg.LISTS_GET_INDEX_LAST = "dernier";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aléatoire";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "supprimer";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Renvoie le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Renvoie l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Renvoie l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Renvoie le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Renvoie un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Supprime et renvoie le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Supprime et renvoie l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Supprime et renvoie l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Supprime et renvoie le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Supprime et renvoie un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Supprime le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Supprime l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Supprime l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Supprime le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Supprime un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "jusqu’à # depuis la fin";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "jusqu’à #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "jusqu’à la fin";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtenir la sous-liste depuis le début";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtenir la sous-liste depuis # depuis la fin";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtenir la sous-liste depuis #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crée une copie de la partie spécifiée d’une liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "trouver la première occurrence de l’élément";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "trouver la dernière occurrence de l’élément";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Renvoie l’index de la première/dernière occurrence de l’élément dans la liste. Renvoie 0 si l'élément n'est pas trouvé.";
Blockly.Msg.LISTS_INLIST = "dans la liste";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 est vide";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Renvoie vrai si la liste est vide.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longueur de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Renvoie la longueur d’une liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "créer une liste avec l’élément %1 répété %2 fois";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crée une liste consistant en la valeur fournie répétée le nombre de fois indiqué.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "comme";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insérer en";
Blockly.Msg.LISTS_SET_INDEX_SET = "mettre";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Insère l’élément au début d’une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Insère l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Insère l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Ajouter l’élément à la fin d’une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Insère l’élément au hasard dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Fixe le premier élément dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Fixe l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Fixe l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Fixe le dernier élément dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Fixe un élément au hasard dans une liste.";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "créer une liste depuis le texte";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "créer un texte depuis la liste";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Réunir une liste de textes en un seul, en les séparant par un séparateur.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Couper un texte en une liste de textes, en coupant à chaque séparateur.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "avec le séparateur";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "faux";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Renvoie soit vrai soit faux.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "vrai";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Renvoyer vrai si les deux entrées sont égales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Renvoyer vrai si la première entrée est plus grande que la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Renvoyer vrai si la première entrée est plus grande ou égale à la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Renvoyer vrai si la première entrée est plus petite que la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Renvoyer vrai si la première entrée est plus petite ou égale à la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Renvoyer vrai si les deux entrées ne sont pas égales.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "pas %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Renvoie vrai si l’entrée est fausse. Renvoie faux si l’entrée est vraie.";
Blockly.Msg.LOGIC_NULL = "nul";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Renvoie nul.";
Blockly.Msg.LOGIC_OPERATION_AND = "et";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "ou";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Renvoyer vrai si les deux entrées sont vraies.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Renvoyer vrai si au moins une des entrées est vraie.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si faux";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si vrai";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Vérifier la condition dans 'test'. Si elle est vraie, renvoie la valeur 'si vrai' ; sinon renvoie la valeur 'si faux'.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Renvoie la somme des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Renvoie le quotient des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Renvoie la différence des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Renvoie le produit des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Renvoie le premier nombre élevé à la puissance du second.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "incrémenter %1 de %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Ajouter un nombre à la variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Renvoie une des constantes courantes : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), ou ∞ (infini).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "contraindre %1 entre %2 et %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Contraindre un nombre à être entre les limites spécifiées (incluses).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "est divisible par";
Blockly.Msg.MATH_IS_EVEN = "est pair";
Blockly.Msg.MATH_IS_NEGATIVE = "est négatif";
Blockly.Msg.MATH_IS_ODD = "est impair";
Blockly.Msg.MATH_IS_POSITIVE = "est positif";
Blockly.Msg.MATH_IS_PRIME = "est premier";
Blockly.Msg.MATH_IS_TOOLTIP = "Vérifier si un nombre est pair, impair, premier, entier, positif, négatif, ou s’il est divisible par un certain nombre. Renvoie vrai ou faux.";
Blockly.Msg.MATH_IS_WHOLE = "est entier";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "reste de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Renvoyer le reste de la division des deux nombres.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un nombre.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "moyenne de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maximum de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "médiane de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimum de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "majoritaires de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "élément aléatoire de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "écart-type de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "somme de la liste";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Renvoyer la moyenne (arithmétique) des valeurs numériques dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Renvoyer le plus grand nombre dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Renvoyer le nombre médian dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Renvoyer le plus petit nombre dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Renvoyer une liste des élément(s) le(s) plus courant(s) dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Renvoyer un élément dans la liste au hasard.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Renvoyer l’écart-type de la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Renvoyer la somme de tous les nombres dans la liste.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fraction aléatoire";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Renvoyer une fraction aléatoire entre 0.0 (inclus) et 1.0 (exclus).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "entier aléatoire entre %1 et %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Renvoyer un entier aléatoire entre les deux limites spécifiées, incluses.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "arrondir";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "arrondir à l’inférieur";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "arrondir au supérieur";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Arrondir un nombre au-dessus ou au-dessous.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolu";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "racine carrée";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Renvoie la valeur absolue d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Renvoie e à la puissance d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Renvoie le logarithme naturel d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Renvoie le logarithme base 10 d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Renvoie l’opposé d’un nombre";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Renvoie 10 à la puissance d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Renvoie la racine carrée d’un nombre.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Renvoie l’arccosinus d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Renvoie l’arcsinus d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Renvoie l’arctangente d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Renvoie le cosinus d’un angle en degrés (pas en radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Renvoie le sinus d’un angle en degrés (pas en radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Renvoie la tangente d’un angle en degrés (pas en radians).";
Blockly.Msg.ME = "Moi";
Blockly.Msg.NEW_VARIABLE = "Nouvelle variable…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nom de la nouvelle variable :";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "autoriser les ordres";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "avec :";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http://fr.wikipedia.org/wiki/Proc%C3%A9dure_%28informatique%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Exécuter la fonction '%1' définie par l’utilisateur.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Exécuter la fonction '%1' définie par l’utilisateur et utiliser son résultat.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "avec :";
Blockly.Msg.PROCEDURES_CREATE_DO = "Créer '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "faire quelque chose";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "à";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crée une fonction sans sortie.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "retour";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crée une fonction avec une sortie.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Attention : Cette fonction a des paramètres en double.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Surligner la définition de la fonction";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si une valeur est vraie, alors renvoyer une seconde valeur.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Attention : Ce bloc pourrait n’être utilisé que dans une définition de fonction.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nom de l’entrée :";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Ajouter une entrée à la fonction.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entrées";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Ajouter, supprimer, ou réarranger les entrées de cette fonction.";
Blockly.Msg.REMOVE_COMMENT = "Supprimer un commentaire";
Blockly.Msg.RENAME_VARIABLE = "Renommer la variable…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Renommer toutes les variables '%1' en :";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "ajouter le texte";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "à";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Ajouter du texte à la variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "en minuscules";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "en Majuscule Au Début De Chaque Mot";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "en MAJUSCULES";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Renvoyer une copie du texte dans une autre casse.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtenir la première lettre";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtenir la lettre # depuis la fin";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtenir la lettre #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "dans le texte";
Blockly.Msg.TEXT_CHARAT_LAST = "obtenir la dernière lettre";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtenir une lettre au hasard";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Renvoie la lettre à la position indiquée.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Ajouter un élément au texte.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "joindre";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Ajouter, supprimer, ou réordonner des sections pour reconfigurer ce bloc de texte.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "jusqu’à la lettre # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "jusqu’à la lettre #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "jusqu’à la dernière lettre";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "dans le texte";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtenir la sous-chaîne depuis la première lettre";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtenir la sous-chaîne depuis la lettre # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtenir la sous-chaîne depuis la lettre #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Renvoie une partie indiquée du texte.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "dans le texte";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "trouver la première occurrence de la chaîne";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "trouver la dernière occurrence de la chaîne";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Renvoie l’index de la première/dernière occurrence de la première chaîne dans la seconde. Renvoie 0 si la chaîne n’est pas trouvée.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 est vide";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Renvoie vrai si le texte fourni est vide.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "créer le texte avec";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Créer un morceau de texte en agrégeant un nombre quelconque d’éléments.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longueur de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Renvoie le nombre de lettres (espaces compris) dans le texte fourni.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "afficher %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Afficher le texte, le nombre ou une autre valeur spécifié.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Demander un nombre à l’utilisateur.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Demander un texte à l’utilisateur.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "invite pour un nombre avec un message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "invite pour un texte avec un message";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Une lettre, un mot ou une ligne de texte.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "supprimer les espaces des deux côtés";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "supprimer les espaces du côté gauche";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "supprimer les espaces du côté droit";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Renvoyer une copie du texte avec les espaces supprimés d’un bout ou des deux.";
Blockly.Msg.THYMIO_ACTUATOR_COMM = "mettre la valeur de la communication IR à";
Blockly.Msg.THYMIO_ACTUATOR_COMM_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_ACTUATOR_COMM_TOOLTIP = "Définir la valeur à envoyer de la communication IR";
Blockly.Msg.THYMIO_ACTUATOR_MIC = "mettre seuil du microphone à";
Blockly.Msg.THYMIO_ACTUATOR_MIC_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_ACTUATOR_MIC_TOOLTIP = "Définir le seuil du microphone";
Blockly.Msg.THYMIO_ACTUATOR_MOTOR = "mettre le moteur %1 à la vitesse de %2";
Blockly.Msg.THYMIO_ACTUATOR_MOTOR_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_ACTUATOR_MOTOR_LEFT = "gauche";
Blockly.Msg.THYMIO_ACTUATOR_MOTOR_RIGHT = "droite";
Blockly.Msg.THYMIO_ACTUATOR_MOTOR_TOOLTIP = "Définir une vitesse de moteur sur le robot";
Blockly.Msg.THYMIO_ACTUATOR_SET_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_ACTUATOR_SET_TOOLTIP = "Définir une variable d'actionneur sur le robot";
Blockly.Msg.THYMIO_ACTUATOR_TIMER = "définir le %1 minuteur à une période de %2 millisecondes";
Blockly.Msg.THYMIO_ACTUATOR_TIMER_FIRST = "premier";
Blockly.Msg.THYMIO_ACTUATOR_TIMER_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_ACTUATOR_TIMER_SECOND = "second";
Blockly.Msg.THYMIO_ACTUATOR_TIMER_TOOLTIP = "Définir une période variable du minuteur sur le robot";
Blockly.Msg.THYMIO_ARITHMETIC_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_ARITHMETIC_TOOLTIP = "Calculer des expressions arithmétiques";
Blockly.Msg.THYMIO_BINARY = "%2 %1 binaires %3";
Blockly.Msg.THYMIO_BINARY_AND = "et logique";
Blockly.Msg.THYMIO_BINARY_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_BINARY_LEFT_SHIFT = "décalage gauche";
Blockly.Msg.THYMIO_BINARY_OR = "ou logique";
Blockly.Msg.THYMIO_BINARY_RIGHT_SHIFT = "décalage droite";
Blockly.Msg.THYMIO_BINARY_TOOLTIP = "Calculer des expressions binaires";
Blockly.Msg.THYMIO_BINARY_XOR = "ou exclusif";
Blockly.Msg.THYMIO_BUTTON_PRESSED = "Le bouton %1 est touché";
Blockly.Msg.THYMIO_BUTTON_PRESSED_BACKWARD = "arrière";
Blockly.Msg.THYMIO_BUTTON_PRESSED_CENTER = "central";
Blockly.Msg.THYMIO_BUTTON_PRESSED_FORWARD = "avant";
Blockly.Msg.THYMIO_BUTTON_PRESSED_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_BUTTON_PRESSED_LEFT = "gauche";
Blockly.Msg.THYMIO_BUTTON_PRESSED_RIGHT = "droite";
Blockly.Msg.THYMIO_BUTTON_PRESSED_TOOLTIP = "Vérifier si un bouton est touché";
Blockly.Msg.THYMIO_COMMUNICATION = "communication IR %1";
Blockly.Msg.THYMIO_COMMUNICATION_DISABLE = "déclenchée";
Blockly.Msg.THYMIO_COMMUNICATION_ENABLE = "enclenchée";
Blockly.Msg.THYMIO_COMMUNICATION_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_COMMUNICATION_TOOLTIP = "Contrôler la fonction de communication du robot";
Blockly.Msg.THYMIO_DECLARE_ARRAY = "déclarer le tableau %1 avec une taille de %2";
Blockly.Msg.THYMIO_DECLARE_ARRAY_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_DECLARE_ARRAY_TOOLTIP = "Déclarer un tableau d'une certaine taille";
Blockly.Msg.THYMIO_EVENT_BUTTON = "lorsque le bouton %1 est %2";
Blockly.Msg.THYMIO_EVENT_BUTTON_BACKWARD = "arrière";
Blockly.Msg.THYMIO_EVENT_BUTTON_CENTER = "central";
Blockly.Msg.THYMIO_EVENT_BUTTON_FORWARD = "avant";
Blockly.Msg.THYMIO_EVENT_BUTTON_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_BUTTON_LEFT = "de gauche";
Blockly.Msg.THYMIO_EVENT_BUTTON_PRESS = "touché";
Blockly.Msg.THYMIO_EVENT_BUTTON_RELEASE = "relaché";
Blockly.Msg.THYMIO_EVENT_BUTTON_RIGHT = "de droite";
Blockly.Msg.THYMIO_EVENT_BUTTON_TOOLTIP = "Réagir à un bouton touché ou relaché";
Blockly.Msg.THYMIO_EVENT_PROX = "lorsque le capteur %1 détecte %2";
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_LEFT = "avant gauche";
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_LEFT_MIDDLE = "avant gauche/central";
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_MIDDLE = "avant central";
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_RIGHT = "avant droite";
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_RIGHT_MIDDLE = "avant droite/central";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND = "lorsque le capteur de sol %1 détecte %2";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_BLACK = "du noir";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_LEFT = "gauche";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_NOPROX = "rien";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_PROX = "quelque chose";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_RIGHT = "droite";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_TOOLTIP = "Réagir aux capteurs de sol";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_WHITE = "du blanc";
Blockly.Msg.THYMIO_EVENT_PROX_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_PROX_NOPROX = "rien";
Blockly.Msg.THYMIO_EVENT_PROX_PROX = "quelque chose";
Blockly.Msg.THYMIO_EVENT_PROX_REAR_LEFT = "arrière gauche";
Blockly.Msg.THYMIO_EVENT_PROX_REAR_RIGHT = "arrière droite";
Blockly.Msg.THYMIO_EVENT_PROX_TOOLTIP = "Réagir aux capteurs de proximité";
Blockly.Msg.THYMIO_EVENT_RECEIVE = "lorsqu'un message de la %1 est reçu";
Blockly.Msg.THYMIO_EVENT_RECEIVE_COMM = "communication IR";
Blockly.Msg.THYMIO_EVENT_RECEIVE_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_RECEIVE_RC = "télécommande";
Blockly.Msg.THYMIO_EVENT_RECEIVE_TOOLTIP = "Réagir à un message reçu";
Blockly.Msg.THYMIO_EVENT_SHOCK = "lorsque qu'un choc est detecté";
Blockly.Msg.THYMIO_EVENT_SHOCK_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_SHOCK_TOOLTIP = "Réagir à un choc";
Blockly.Msg.THYMIO_EVENT_SOUND = "lorsque que le son %1";
Blockly.Msg.THYMIO_EVENT_SOUND_FINISHED = "a fini de jouer";
Blockly.Msg.THYMIO_EVENT_SOUND_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_SOUND_MIC = "dépasse un seuil";
Blockly.Msg.THYMIO_EVENT_SOUND_TOOLTIP = "Réagir à un événement sonore";
Blockly.Msg.THYMIO_EVENT_TIMER = "lorsque le %1 minuteur arrive à expiration";
Blockly.Msg.THYMIO_EVENT_TIMER_FIRST = "premier";
Blockly.Msg.THYMIO_EVENT_TIMER_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_TIMER_SECOND = "second";
Blockly.Msg.THYMIO_EVENT_TIMER_TOOLTIP = "Réagir à un minuteur arrivé à expiration";
Blockly.Msg.THYMIO_EVENT_UPDATE = "lorsque %1 mis à jour";
Blockly.Msg.THYMIO_EVENT_UPDATE_ACC = "l'accelèrometre est";
Blockly.Msg.THYMIO_EVENT_UPDATE_BUTTONS = "les boutons sont";
Blockly.Msg.THYMIO_EVENT_UPDATE_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_UPDATE_MOTOR = "moteurs sont";
Blockly.Msg.THYMIO_EVENT_UPDATE_PROX = "les capteurs de proximité sont";
Blockly.Msg.THYMIO_EVENT_UPDATE_TEMPERATURE = "la temperature est";
Blockly.Msg.THYMIO_EVENT_UPDATE_TOOLTIP = "Réagir à un événement de mise à jour";
Blockly.Msg.THYMIO_FOR_DO = "faire";
Blockly.Msg.THYMIO_FOR_FOR = "pour";
Blockly.Msg.THYMIO_FOR_FROM = "depuis";
Blockly.Msg.THYMIO_FOR_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_FOR_TO = "à";
Blockly.Msg.THYMIO_FOR_TOOLTIP = "Compter une variable à partir d'un début jusqu'à une valeur de fin";
Blockly.Msg.THYMIO_GET_ARRAY = "valeur %2 du tableau %1";
Blockly.Msg.THYMIO_GET_ARRAY_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_GET_ARRAY_TOOLTIP = "Obtenir la valeur d'un élément de tableau";
Blockly.Msg.THYMIO_LED = "allumer la LED %1 en %2";
Blockly.Msg.THYMIO_LED_BOTTOM_LEFT = "du dessous gauche";
Blockly.Msg.THYMIO_LED_BOTTOM_RIGHT = "du dessous droite";
Blockly.Msg.THYMIO_LED_BUTTON = "allumer la LED de bouton avant %1 droite %2 arrière %3 gauche %4";
Blockly.Msg.THYMIO_LED_BUTTON_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_BUTTON_TOOLTIP = "Définir les LED des boutons";
Blockly.Msg.THYMIO_LED_CIRCLE = "allumer la LED du cercle avant %1 avant droite %2 droite %3 arrière droite %4 arrière %5 arrière gauche %6 gauche %7 avant gauche %8";
Blockly.Msg.THYMIO_LED_CIRCLE_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_CIRCLE_TOOLTIP = "Définir le cercle de LED";
Blockly.Msg.THYMIO_LED_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_OFF = "éteindre %1";
Blockly.Msg.THYMIO_LED_OFF_BOTTOM_LEFT = "la LED RVB du dessous gauche";
Blockly.Msg.THYMIO_LED_OFF_BOTTOM_RIGHT = "la LED RVB du dessous droite";
Blockly.Msg.THYMIO_LED_OFF_BUTTONS = "les LED des boutons";
Blockly.Msg.THYMIO_LED_OFF_CIRCLE = "les LED du cercle";
Blockly.Msg.THYMIO_LED_OFF_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_OFF_MICROPHONE = "la LED du microphone";
Blockly.Msg.THYMIO_LED_OFF_PROX_H = "les LED des capteurs horizontaux";
Blockly.Msg.THYMIO_LED_OFF_PROX_V = "les LED des capteurs de sol";
Blockly.Msg.THYMIO_LED_OFF_RC = "la LED de la télécommande";
Blockly.Msg.THYMIO_LED_OFF_TEMPERATURE = "les LED de température";
Blockly.Msg.THYMIO_LED_OFF_TOOLTIP = "Éteindre une LED";
Blockly.Msg.THYMIO_LED_OFF_TOP = "la LED RVB du dessus";
Blockly.Msg.THYMIO_LED_PROX = "allumer les LED des capteurs de proximité avant gauche %1 avant gauche/central %2 avant central/gauche %3 avant central/droite %4 avant droite/centrale %5 avant droite %6 arrière gauche %7 arrière droite %8";
Blockly.Msg.THYMIO_LED_PROX_GROUND = "allumer les LED des capteurs de sol gauche %1 droite %2";
Blockly.Msg.THYMIO_LED_PROX_GROUND_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_PROX_GROUND_TOOLTIP = "Définir les LED des capteurs de sol";
Blockly.Msg.THYMIO_LED_PROX_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_PROX_TOOLTIP = "Définir les LED des capteurs de proximités";
Blockly.Msg.THYMIO_LED_RC_SOUND = "allumer la LED %1 à %2";
Blockly.Msg.THYMIO_LED_RC_SOUND_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_RC_SOUND_RC = "de la télécommande";
Blockly.Msg.THYMIO_LED_RC_SOUND_SOUND = "du microphone";
Blockly.Msg.THYMIO_LED_RC_SOUND_TOOLTIP = "Définir les LED de la télécommande et de son";
Blockly.Msg.THYMIO_LED_RGB = "allumer la LED %1 en rouge %2 vert %3 bleu %4";
Blockly.Msg.THYMIO_LED_RGB_BOTTOM_LEFT = "du dessous gauche";
Blockly.Msg.THYMIO_LED_RGB_BOTTOM_RIGHT = "du dessous droite";
Blockly.Msg.THYMIO_LED_RGB_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_RGB_TOOLTIP = "Définir une LED à une couleur spécifique par les valeurs RVB";
Blockly.Msg.THYMIO_LED_RGB_TOP = "du dessus";
Blockly.Msg.THYMIO_LED_TEMPERATURE = "allumer la LED de température rouge %1 bleu %2";
Blockly.Msg.THYMIO_LED_TEMPERATURE_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_TEMPERATURE_TOOLTIP = "Définir les LED de temperature";
Blockly.Msg.THYMIO_LED_TOOLTIP = "Définire une couleur spécifique à une LED";
Blockly.Msg.THYMIO_LED_TOP = "du dessus";
Blockly.Msg.THYMIO_MOTORS_START = "commencer à rouler %1 avec la vitesse %2";
Blockly.Msg.THYMIO_MOTORS_START_BACKWARD = "en arrière";
Blockly.Msg.THYMIO_MOTORS_START_FORWARD = "en avant";
Blockly.Msg.THYMIO_MOTORS_START_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_MOTORS_START_SPINCCW = "en tournant dans le sens antihoraire";
Blockly.Msg.THYMIO_MOTORS_START_SPINCW = "en tournant dans le sens horaire";
Blockly.Msg.THYMIO_MOTORS_START_TOOLTIP = "Démarrer les moteurs";
Blockly.Msg.THYMIO_MOTORS_START_TURNBACKWARDLEFT = "en tournant en arrière à gauche";
Blockly.Msg.THYMIO_MOTORS_START_TURNBACKWARDRIGHT = "en tournant en arrière droite";
Blockly.Msg.THYMIO_MOTORS_START_TURNLEFT = "en tournant à gauche";
Blockly.Msg.THYMIO_MOTORS_START_TURNRIGHT = "en tournant à droite";
Blockly.Msg.THYMIO_MOTORS_STOP = "arrêter les moteurs";
Blockly.Msg.THYMIO_MOTORS_STOP_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_MOTORS_STOP_TOOLTIP = "Arrêter les moteurs";
Blockly.Msg.THYMIO_PROX_CHECK = "Le capteur de proximité %1 detecte %2";
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_LEFT = "avant gauche";
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_LEFT_MIDDLE = "avant gauche/central";
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_MIDDLE = "avant central";
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_RIGHT = "avant droite";
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_RIGHT_MIDDLE = "avant droite/central";
Blockly.Msg.THYMIO_PROX_CHECK_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_PROX_CHECK_NOPROX = "rien";
Blockly.Msg.THYMIO_PROX_CHECK_PROX = "quelque chose";
Blockly.Msg.THYMIO_PROX_CHECK_REAR_LEFT = "arrière gauche";
Blockly.Msg.THYMIO_PROX_CHECK_REAR_RIGHT = "arrière droite";
Blockly.Msg.THYMIO_PROX_CHECK_TOOLTIP = "Tester l'état d'un capteur de proximité";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK = "Le capteur de sol %1 detecte %2";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_BLACK = "noir";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_LEFT = "gauche";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_NOPROX = "rien";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_PROX = "quelque chose";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_RIGHT = "droite";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_TOOLTIP = "Tester l'état d'un capteur de sol";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_WHITE = "blanc";
Blockly.Msg.THYMIO_SENSOR_ACC = "valeur %1 de l'accéléromètre";
Blockly.Msg.THYMIO_SENSOR_ACC_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_ACC_TOOLTIP = "Récupèrer une valeur de l'accéléromètre";
Blockly.Msg.THYMIO_SENSOR_ACC_X = "x";
Blockly.Msg.THYMIO_SENSOR_ACC_Y = "y";
Blockly.Msg.THYMIO_SENSOR_ACC_Z = "z";
Blockly.Msg.THYMIO_SENSOR_COMM = "valeur reçue de la communication IR";
Blockly.Msg.THYMIO_SENSOR_COMM_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_COMM_TOOLTIP = "Récupèrer la valeur reçue de la communication IR";
Blockly.Msg.THYMIO_SENSOR_MIC = "valeur d'intensité du microphone";
Blockly.Msg.THYMIO_SENSOR_MIC_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_MIC_TOOLTIP = "Récupèrer la valeur d'intensité du microphone";
Blockly.Msg.THYMIO_SENSOR_MOTOR = "vitesse du moteur %1";
Blockly.Msg.THYMIO_SENSOR_MOTOR_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_MOTOR_LEFT = "gauche";
Blockly.Msg.THYMIO_SENSOR_MOTOR_RIGHT = "droite";
Blockly.Msg.THYMIO_SENSOR_MOTOR_TOOLTIP = "Récupèrer la vitesse d'un moteur";
Blockly.Msg.THYMIO_SENSOR_PROX = "valeur du capteur de proximité %1";
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_LEFT = "avant gauche";
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_LEFT_MIDDLE = "avant gauche/central";
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_MIDDLE = "avant central";
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_RIGHT = "avant droite";
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_RIGHT_MIDDLE = "avant droite/central";
Blockly.Msg.THYMIO_SENSOR_PROX_GROUND_LEFT = "de sol gauche";
Blockly.Msg.THYMIO_SENSOR_PROX_GROUND_RIGHT = "de sol droite";
Blockly.Msg.THYMIO_SENSOR_PROX_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_PROX_REAR_LEFT = "arrière gauche";
Blockly.Msg.THYMIO_SENSOR_PROX_REAR_RIGHT = "arrière droite";
Blockly.Msg.THYMIO_SENSOR_PROX_TOOLTIP = "Récupère la valeur d'un capteur de proximité";
Blockly.Msg.THYMIO_SENSOR_RC = "valeur %1 reçue de la télécommande";
Blockly.Msg.THYMIO_SENSOR_RC_ADDRESS = "addresse";
Blockly.Msg.THYMIO_SENSOR_RC_COMMAND = "commande";
Blockly.Msg.THYMIO_SENSOR_RC_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_RC_TOOLTIP = "Récupèrer une valeur de la télécommande";
Blockly.Msg.THYMIO_SENSOR_TEMPERATURE = "valeur du capteur de température";
Blockly.Msg.THYMIO_SENSOR_TEMPERATURE_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_TEMPERATURE_TOOLTIP = "Récupèrer la valeur du capteur de température";
Blockly.Msg.THYMIO_SET_ARRAY = "mettre la valeur %2 du tableau %1 à %3";
Blockly.Msg.THYMIO_SET_ARRAY_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_SET_ARRAY_TOOLTIP = "Définir la valeur d'un élément de tableau";
Blockly.Msg.THYMIO_SOUND_NOTE = "jouer un note à %1 Hz pendant %2 / 60 secondes";
Blockly.Msg.THYMIO_SOUND_NOTE_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_SOUND_NOTE_TOOLTIP = "Jouer une note d'une fréquence pour une durée";
Blockly.Msg.THYMIO_SOUND_STOP = "arrêter de jouer son";
Blockly.Msg.THYMIO_SOUND_STOP_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_SOUND_STOP_TOOLTIP = "Arrêter de jouer un son";
Blockly.Msg.THYMIO_SOUND_SYSTEM = "jouer le son %1";
Blockly.Msg.THYMIO_SOUND_SYSTEM_ARROW = "des boutons flèches";
Blockly.Msg.THYMIO_SOUND_SYSTEM_CENTRAL = "du bonton central";
Blockly.Msg.THYMIO_SOUND_SYSTEM_COLLISION = "collision";
Blockly.Msg.THYMIO_SOUND_SYSTEM_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_SOUND_SYSTEM_SCARY = "peureux";
Blockly.Msg.THYMIO_SOUND_SYSTEM_SHUTDOWN = "d'arrêt";
Blockly.Msg.THYMIO_SOUND_SYSTEM_STARTUP = "d'allumage";
Blockly.Msg.THYMIO_SOUND_SYSTEM_TARGET_DETECTED = "cible detectée";
Blockly.Msg.THYMIO_SOUND_SYSTEM_TARGET_FRIENDLY = "cible amicale";
Blockly.Msg.THYMIO_SOUND_SYSTEM_TOOLTIP = "Jouer un son système";
Blockly.Msg.THYMIO_SUBROUTINE_DEFINE_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_SUBROUTINE_DEFINE_SUBROUTINE = "sous-routine";
Blockly.Msg.THYMIO_SUBROUTINE_DEFINE_TOOLTIP = "Définir des sous-routines";
Blockly.Msg.THYMIO_UNARY_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_UNARY_TOOLTIP = "Effectuer des opérations unaires";
Blockly.Msg.THYMIO_UNNARY = "%1 %2";
Blockly.Msg.THYMIO_UNNARY_ABSOLUTE = "absolu";
Blockly.Msg.THYMIO_UNNARY_BINARY_NOT = "négation binaire";
Blockly.Msg.THYMIO_UNNARY_NEGATIVE = "négatif";
Blockly.Msg.THYMIO_VARIABLE_SET = "mettre %1 à %2";
Blockly.Msg.THYMIO_WHEN_DO = "faire";
Blockly.Msg.THYMIO_WHEN_HELPURL = "https://www.thymio.org/fr:thymiotutorielp2";
Blockly.Msg.THYMIO_WHEN_TOOLTIP = "Vérifier pour un changement d'une condition";
Blockly.Msg.THYMIO_WHEN_WHEN = "quand";
Blockly.Msg.TODAY = "Aujourd'hui";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "élément";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Créer 'fixer %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Renvoie la valeur de cette variable.";
Blockly.Msg.VARIABLES_SET = "fixer %1 à %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Créer 'obtenir %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Fixe cette variable pour qu’elle soit égale à la valeur de l’entrée.";
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;