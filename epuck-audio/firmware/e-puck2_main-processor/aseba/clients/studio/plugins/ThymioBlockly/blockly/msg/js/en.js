// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.en');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Add Comment";
Blockly.Msg.AUTH = "Please authorize this app to enable your work to be saved and to allow it to be shared by you.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Change value:";
Blockly.Msg.CHAT = "Chat with your collaborator by typing in this box!";
Blockly.Msg.CLEAN_UP = "Clean up Blocks";
Blockly.Msg.COLLAPSE_ALL = "Collapse Blocks";
Blockly.Msg.COLLAPSE_BLOCK = "Collapse Block";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "colour 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "colour 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "ratio";
Blockly.Msg.COLOUR_BLEND_TITLE = "blend";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blends two colours together with a given ratio (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choose a colour from the palette.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";
Blockly.Msg.COLOUR_RANDOM_TITLE = "random colour";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choose a colour at random.";
Blockly.Msg.COLOUR_RGB_BLUE = "blue";
Blockly.Msg.COLOUR_RGB_GREEN = "green";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "red";
Blockly.Msg.COLOUR_RGB_TITLE = "colour with";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "break out of loop";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continue with next iteration of loop";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Break out of the containing loop.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Skip the rest of this loop, and continue with the next iteration.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Warning: This block may only be used within a loop.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";
Blockly.Msg.CONTROLS_FOREACH_TITLE = "for each item %1 in list %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "For each item in a list, set the variable '%1' to the item, and then do some statements.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";
Blockly.Msg.CONTROLS_FOR_TITLE = "count with %1 from %2 to %3 by %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Add a condition to the if block.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Add a final, catch-all condition to the if block.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Add, remove, or reorder sections to reconfigure this if block.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "else";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "else if";
Blockly.Msg.CONTROLS_IF_MSG_IF = "if";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "If a value is true, then do some statements.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "do";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repeat %1 times";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Do some statements several times.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repeat until";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repeat while";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "While a value is false, then do some statements.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "While a value is true, then do some statements.";
Blockly.Msg.DELETE_BLOCK = "Delete Block";
Blockly.Msg.DELETE_X_BLOCKS = "Delete %1 Blocks";
Blockly.Msg.DISABLE_BLOCK = "Disable Block";
Blockly.Msg.DUPLICATE_BLOCK = "Duplicate";
Blockly.Msg.ENABLE_BLOCK = "Enable Block";
Blockly.Msg.EXPAND_ALL = "Expand Blocks";
Blockly.Msg.EXPAND_BLOCK = "Expand Block";
Blockly.Msg.EXTERNAL_INPUTS = "External Inputs";
Blockly.Msg.HELP = "Help";
Blockly.Msg.INLINE_INPUTS = "Inline Inputs";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "create empty list";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returns a list, of length 0, containing no data records";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "list";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Add, remove, or reorder sections to reconfigure this list block.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "create list with";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Add an item to the list.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Create a list with any number of items.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "first";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# from end";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "get";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "get and remove";
Blockly.Msg.LISTS_GET_INDEX_LAST = "last";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "random";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "remove";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returns the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returns the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returns the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returns the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returns a random item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Removes and returns the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Removes and returns the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Removes and returns the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Removes and returns the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Removes and returns a random item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Removes the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Removes the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Removes the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Removes the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Removes a random item in a list.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "to # from end";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "to #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "to last";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "get sub-list from first";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "get sub-list from # from end";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "get sub-list from #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creates a copy of the specified portion of a list.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find first occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
Blockly.Msg.LISTS_INDEX_OF_LAST = "find last occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returns the index of the first/last occurrence of the item in the list. Returns 0 if item is not found.";
Blockly.Msg.LISTS_INLIST = "in list";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 is empty";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Returns true if the list is empty.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";
Blockly.Msg.LISTS_LENGTH_TITLE = "length of %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returns the length of a list.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_REPEAT_TITLE = "create list with item %1 repeated %2 times";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creates a list consisting of the given value repeated the specified number of times.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "as";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insert at";
Blockly.Msg.LISTS_SET_INDEX_SET = "set";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserts the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserts the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sets the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sets the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "false";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returns either true or false.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "true";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Return true if both inputs equal each other.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Return true if the first input is greater than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Return true if the first input is greater than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Return true if the first input is smaller than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Return true if the first input is smaller than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Return true if both inputs are not equal to each other.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";
Blockly.Msg.LOGIC_NEGATE_TITLE = "not %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returns true if the input is false. Returns false if the input is true.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returns null.";
Blockly.Msg.LOGIC_OPERATION_AND = "and";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";
Blockly.Msg.LOGIC_OPERATION_OR = "or";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Return true if both inputs are true.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Return true if at least one of the inputs is true.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "if false";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "if true";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Return the sum of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Return the quotient of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Return the difference of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Return the product of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Return the first number raised to the power of the second number.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "change %1 by %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain %1 low %2 high %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified limits (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";
Blockly.Msg.MATH_IS_EVEN = "is even";
Blockly.Msg.MATH_IS_NEGATIVE = "is negative";
Blockly.Msg.MATH_IS_ODD = "is odd";
Blockly.Msg.MATH_IS_POSITIVE = "is positive";
Blockly.Msg.MATH_IS_PRIME = "is prime";
Blockly.Msg.MATH_IS_TOOLTIP = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";
Blockly.Msg.MATH_IS_WHOLE = "is whole";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "remainder of %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Return the remainder from dividing the two numbers.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "A number.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "average of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "max of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "median of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "min of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modes of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "random item of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "sum of list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Return the average (arithmetic mean) of the numeric values in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Return the largest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Return the median number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Return the smallest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Return a list of the most common item(s) in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Return a random element from the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Return the standard deviation of the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Return the sum of all the numbers in the list.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "random fraction";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "random integer from %1 to %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Return a random integer between the two specified limits, inclusive.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "round";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "round down";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "round up";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Round a number up or down.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolute";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "square root";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Return the absolute value of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Return e to the power of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Return the natural logarithm of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Return the base 10 logarithm of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Return the negation of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Return 10 to the power of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Return the square root of a number.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Return the arccosine of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Return the arcsine of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Return the arctangent of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Return the cosine of a degree (not radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Return the sine of a degree (not radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Return the tangent of a degree (not radian).";
Blockly.Msg.ME = "Me";
Blockly.Msg.NEW_VARIABLE = "New variable...";
Blockly.Msg.NEW_VARIABLE_TITLE = "New variable name:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "allow statements";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "with:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "with:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Create '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "do something";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "to";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Creates a function with no output.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "return";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Creates a function with an output.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate parameters.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "If a value is true, then return a second value.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block may be used only within a function definition.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "input name:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Add an input to the function.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inputs";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Add, remove, or reorder inputs to this function.";
Blockly.Msg.REMOVE_COMMENT = "Remove Comment";
Blockly.Msg.RENAME_VARIABLE = "Rename variable...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Rename all '%1' variables to:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "append text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg.TEXT_APPEND_TO = "to";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Append some text to variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "to lower case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "to Title Case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "to UPPER CASE";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";
Blockly.Msg.TEXT_CHARAT_FIRST = "get first letter";
Blockly.Msg.TEXT_CHARAT_FROM_END = "get letter # from end";
Blockly.Msg.TEXT_CHARAT_FROM_START = "get letter #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_CHARAT_LAST = "get last letter";
Blockly.Msg.TEXT_CHARAT_RANDOM = "get random letter";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item to the text.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "join";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "to letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "to letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "to last letter";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in text";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find first occurrence of text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find last occurrence of text";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returns the index of the first/last occurrence of the first text in the second text. Returns 0 if text is not found.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 is empty";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returns true if the provided text is empty.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "create text with";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Create a piece of text by joining together any number of items.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg.TEXT_LENGTH_TITLE = "length of %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returns the number of letters (including spaces) in the provided text.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";
Blockly.Msg.TEXT_PRINT_TITLE = "print %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Print the specified text, number or other value.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prompt for user for a number.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prompt for user for some text.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "prompt for number with message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "prompt for text with message";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "A letter, word, or line of text.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "trim spaces from both sides of";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "trim spaces from left side of";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "trim spaces from right side of";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Return a copy of the text with spaces removed from one or both ends.";
Blockly.Msg.THYMIO_ACTUATOR_COMM = "set IR communication to transmit to";
Blockly.Msg.THYMIO_ACTUATOR_COMM_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_ACTUATOR_COMM_TOOLTIP = "Sets the IR communication value to send";
Blockly.Msg.THYMIO_ACTUATOR_MIC = "set microphone threshold to";
Blockly.Msg.THYMIO_ACTUATOR_MIC_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_ACTUATOR_MIC_TOOLTIP = "Sets the microphone threshold";
Blockly.Msg.THYMIO_ACTUATOR_MOTOR = "set %1 motor speed to %2";
Blockly.Msg.THYMIO_ACTUATOR_MOTOR_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_ACTUATOR_MOTOR_LEFT = "left";
Blockly.Msg.THYMIO_ACTUATOR_MOTOR_RIGHT = "right";
Blockly.Msg.THYMIO_ACTUATOR_MOTOR_TOOLTIP = "Sets a motor speed on the robot";
Blockly.Msg.THYMIO_ACTUATOR_SET_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_ACTUATOR_SET_TOOLTIP = "Sets an actuator variable on the robot";
Blockly.Msg.THYMIO_ACTUATOR_TIMER = "set %1 timer period to %2 milliseconds";
Blockly.Msg.THYMIO_ACTUATOR_TIMER_FIRST = "first";
Blockly.Msg.THYMIO_ACTUATOR_TIMER_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_ACTUATOR_TIMER_SECOND = "second";
Blockly.Msg.THYMIO_ACTUATOR_TIMER_TOOLTIP = "Sets a timer period variable on the robot";
Blockly.Msg.THYMIO_ARITHMETIC_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_ARITHMETIC_TOOLTIP = "Computes arithmetic expressions";
Blockly.Msg.THYMIO_BINARY = "%2 binary %1 %3";
Blockly.Msg.THYMIO_BINARY_AND = "and";
Blockly.Msg.THYMIO_BINARY_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_BINARY_LEFT_SHIFT = "left shift";
Blockly.Msg.THYMIO_BINARY_OR = "or";
Blockly.Msg.THYMIO_BINARY_RIGHT_SHIFT = "right shift";
Blockly.Msg.THYMIO_BINARY_TOOLTIP = "Computes binary expressions";
Blockly.Msg.THYMIO_BINARY_XOR = "xor";
Blockly.Msg.THYMIO_BUTTON_PRESSED = "%1 button touched";
Blockly.Msg.THYMIO_BUTTON_PRESSED_BACKWARD = "backward";
Blockly.Msg.THYMIO_BUTTON_PRESSED_CENTER = "center";
Blockly.Msg.THYMIO_BUTTON_PRESSED_FORWARD = "forward";
Blockly.Msg.THYMIO_BUTTON_PRESSED_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_BUTTON_PRESSED_LEFT = "left";
Blockly.Msg.THYMIO_BUTTON_PRESSED_RIGHT = "right";
Blockly.Msg.THYMIO_BUTTON_PRESSED_TOOLTIP = "Checks if a button is pressed";
Blockly.Msg.THYMIO_COMMUNICATION = "%1 IR communication";
Blockly.Msg.THYMIO_COMMUNICATION_DISABLE = "disable";
Blockly.Msg.THYMIO_COMMUNICATION_ENABLE = "enable";
Blockly.Msg.THYMIO_COMMUNICATION_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_COMMUNICATION_TOOLTIP = "Controls the communication feature of the robot";
Blockly.Msg.THYMIO_DECLARE_ARRAY = "declare %1 as array of size %2";
Blockly.Msg.THYMIO_DECLARE_ARRAY_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_DECLARE_ARRAY_TOOLTIP = "Declares an array of a certain size";
Blockly.Msg.THYMIO_EVENT_BUTTON = "on %1 button %2";
Blockly.Msg.THYMIO_EVENT_BUTTON_BACKWARD = "backward";
Blockly.Msg.THYMIO_EVENT_BUTTON_CENTER = "center";
Blockly.Msg.THYMIO_EVENT_BUTTON_FORWARD = "forward";
Blockly.Msg.THYMIO_EVENT_BUTTON_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_BUTTON_LEFT = "left";
Blockly.Msg.THYMIO_EVENT_BUTTON_PRESS = "touched";
Blockly.Msg.THYMIO_EVENT_BUTTON_RELEASE = "released";
Blockly.Msg.THYMIO_EVENT_BUTTON_RIGHT = "right";
Blockly.Msg.THYMIO_EVENT_BUTTON_TOOLTIP = "React to a button press or release event";
Blockly.Msg.THYMIO_EVENT_PROX = "on %1 sensor detecting %2";
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_LEFT = "front left";
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_LEFT_MIDDLE = "front left/middle";
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_MIDDLE = "front middle";
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_RIGHT = "front right";
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_RIGHT_MIDDLE = "front right/middle";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND = "on %1 ground sensor detecting %2";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_BLACK = "black";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_LEFT = "left";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_NOPROX = "no proximity";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_PROX = "proximity";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_RIGHT = "right";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_TOOLTIP = "React to a ground proximity event";
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_WHITE = "white";
Blockly.Msg.THYMIO_EVENT_PROX_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_PROX_NOPROX = "no proximity";
Blockly.Msg.THYMIO_EVENT_PROX_PROX = "proximity";
Blockly.Msg.THYMIO_EVENT_PROX_REAR_LEFT = "rear left";
Blockly.Msg.THYMIO_EVENT_PROX_REAR_RIGHT = "rear right";
Blockly.Msg.THYMIO_EVENT_PROX_TOOLTIP = "React to a proximity event";
Blockly.Msg.THYMIO_EVENT_RECEIVE = "on %1 received";
Blockly.Msg.THYMIO_EVENT_RECEIVE_COMM = "IR communication";
Blockly.Msg.THYMIO_EVENT_RECEIVE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_RECEIVE_RC = "remote control signal";
Blockly.Msg.THYMIO_EVENT_RECEIVE_TOOLTIP = "React to a receive event";
Blockly.Msg.THYMIO_EVENT_SHOCK = "on shock detected";
Blockly.Msg.THYMIO_EVENT_SHOCK_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_SHOCK_TOOLTIP = "React to a shock event";
Blockly.Msg.THYMIO_EVENT_SOUND = "on sound %1";
Blockly.Msg.THYMIO_EVENT_SOUND_FINISHED = "finished playing";
Blockly.Msg.THYMIO_EVENT_SOUND_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_SOUND_MIC = "intensity above threshold";
Blockly.Msg.THYMIO_EVENT_SOUND_TOOLTIP = "React to a sound event";
Blockly.Msg.THYMIO_EVENT_TIMER = "on %1 timer expired";
Blockly.Msg.THYMIO_EVENT_TIMER_FIRST = "first";
Blockly.Msg.THYMIO_EVENT_TIMER_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_TIMER_SECOND = "second";
Blockly.Msg.THYMIO_EVENT_TIMER_TOOLTIP = "React to an expired timer event";
Blockly.Msg.THYMIO_EVENT_UPDATE = "on %1 updated";
Blockly.Msg.THYMIO_EVENT_UPDATE_ACC = "accelerometer";
Blockly.Msg.THYMIO_EVENT_UPDATE_BUTTONS = "button values";
Blockly.Msg.THYMIO_EVENT_UPDATE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_EVENT_UPDATE_MOTOR = "motor";
Blockly.Msg.THYMIO_EVENT_UPDATE_PROX = "proximity sensors";
Blockly.Msg.THYMIO_EVENT_UPDATE_TEMPERATURE = "temperature";
Blockly.Msg.THYMIO_EVENT_UPDATE_TOOLTIP = "React to an update event";
Blockly.Msg.THYMIO_FOR_DO = "do";
Blockly.Msg.THYMIO_FOR_FOR = "for";
Blockly.Msg.THYMIO_FOR_FROM = "from";
Blockly.Msg.THYMIO_FOR_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_FOR_TO = "to";
Blockly.Msg.THYMIO_FOR_TOOLTIP = "Counts a variable up from a start to an end value";
Blockly.Msg.THYMIO_GET_ARRAY = "array %1 element %2";
Blockly.Msg.THYMIO_GET_ARRAY_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_GET_ARRAY_TOOLTIP = "Gets the value of an array element";
Blockly.Msg.THYMIO_LED = "set %1 LED to %2";
Blockly.Msg.THYMIO_LED_BOTTOM_LEFT = "bottom left";
Blockly.Msg.THYMIO_LED_BOTTOM_RIGHT = "bottom right";
Blockly.Msg.THYMIO_LED_BUTTON = "set button LEDs to forward %1 right %2 backward %3 left %4";
Blockly.Msg.THYMIO_LED_BUTTON_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_BUTTON_TOOLTIP = "Sets the button LEDs";
Blockly.Msg.THYMIO_LED_CIRCLE = "set circle LEDs to forward %1 forward right %2 right %3 backward right %4 backward %5 backward left %6 left %7 forward left %8";
Blockly.Msg.THYMIO_LED_CIRCLE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_CIRCLE_TOOLTIP = "Sets the circle LEDs";
Blockly.Msg.THYMIO_LED_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_OFF = "turn off %1";
Blockly.Msg.THYMIO_LED_OFF_BOTTOM_LEFT = "bottom left LED";
Blockly.Msg.THYMIO_LED_OFF_BOTTOM_RIGHT = "bottom right LED";
Blockly.Msg.THYMIO_LED_OFF_BUTTONS = "button LEDs";
Blockly.Msg.THYMIO_LED_OFF_CIRCLE = "circle LEDs";
Blockly.Msg.THYMIO_LED_OFF_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_OFF_MICROPHONE = "microphone LED";
Blockly.Msg.THYMIO_LED_OFF_PROX_H = "horizontal proximity LEDs";
Blockly.Msg.THYMIO_LED_OFF_PROX_V = "ground proximity LEDs";
Blockly.Msg.THYMIO_LED_OFF_RC = "remote control LED";
Blockly.Msg.THYMIO_LED_OFF_TEMPERATURE = "temperature LEDs";
Blockly.Msg.THYMIO_LED_OFF_TOOLTIP = "Turns off a LED";
Blockly.Msg.THYMIO_LED_OFF_TOP = "top LED";
Blockly.Msg.THYMIO_LED_PROX = "set horizontal proximity LEDs to front left %1 front left/middle %2 front middle/left %3 front middle/right %4 front right/middle %5 front right %6 rear left %7 rear right %8";
Blockly.Msg.THYMIO_LED_PROX_GROUND = "set ground proximity LEDs to left %1 right %2";
Blockly.Msg.THYMIO_LED_PROX_GROUND_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_PROX_GROUND_TOOLTIP = "Sets the ground proximity LEDs";
Blockly.Msg.THYMIO_LED_PROX_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_PROX_TOOLTIP = "Sets the horizontal proximity LEDs";
Blockly.Msg.THYMIO_LED_RC_SOUND = "set %1 LED to %2";
Blockly.Msg.THYMIO_LED_RC_SOUND_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_RC_SOUND_RC = "remote control";
Blockly.Msg.THYMIO_LED_RC_SOUND_SOUND = "microphone";
Blockly.Msg.THYMIO_LED_RC_SOUND_TOOLTIP = "Sets the remote control and sound LEDs";
Blockly.Msg.THYMIO_LED_RGB = "set %1 LED to red %2 green %3 blue %4";
Blockly.Msg.THYMIO_LED_RGB_BOTTOM_LEFT = "bottom left";
Blockly.Msg.THYMIO_LED_RGB_BOTTOM_RIGHT = "bottom right";
Blockly.Msg.THYMIO_LED_RGB_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_RGB_TOOLTIP = "Sets a LED to a specified color by RGB values";
Blockly.Msg.THYMIO_LED_RGB_TOP = "top";
Blockly.Msg.THYMIO_LED_TEMPERATURE = "set temperature LEDs to red %1 blue %2";
Blockly.Msg.THYMIO_LED_TEMPERATURE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_LED_TEMPERATURE_TOOLTIP = "Sets the temperature LEDs";
Blockly.Msg.THYMIO_LED_TOOLTIP = "Sets a LED to a specified color";
Blockly.Msg.THYMIO_LED_TOP = "top";
Blockly.Msg.THYMIO_MOTORS_START = "start %1 with speed %2";
Blockly.Msg.THYMIO_MOTORS_START_BACKWARD = "driving backward";
Blockly.Msg.THYMIO_MOTORS_START_FORWARD = "driving forward";
Blockly.Msg.THYMIO_MOTORS_START_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_MOTORS_START_SPINCCW = "spinning counterclockwise";
Blockly.Msg.THYMIO_MOTORS_START_SPINCW = "spinning clockwise";
Blockly.Msg.THYMIO_MOTORS_START_TOOLTIP = "Starts the motors";
Blockly.Msg.THYMIO_MOTORS_START_TURNBACKWARDLEFT = "turning backward left";
Blockly.Msg.THYMIO_MOTORS_START_TURNBACKWARDRIGHT = "turning backward right";
Blockly.Msg.THYMIO_MOTORS_START_TURNLEFT = "turning left";
Blockly.Msg.THYMIO_MOTORS_START_TURNRIGHT = "turning right";
Blockly.Msg.THYMIO_MOTORS_STOP = "stop motors";
Blockly.Msg.THYMIO_MOTORS_STOP_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_MOTORS_STOP_TOOLTIP = "Stops the motors";
Blockly.Msg.THYMIO_PROX_CHECK = "%1 sensor detecting %2";
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_LEFT = "front left";
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_LEFT_MIDDLE = "front left/middle";
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_MIDDLE = "front middle";
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_RIGHT = "front right";
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_RIGHT_MIDDLE = "front right/middle";
Blockly.Msg.THYMIO_PROX_CHECK_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_PROX_CHECK_NOPROX = "no proximity";
Blockly.Msg.THYMIO_PROX_CHECK_PROX = "proximity";
Blockly.Msg.THYMIO_PROX_CHECK_REAR_LEFT = "rear left";
Blockly.Msg.THYMIO_PROX_CHECK_REAR_RIGHT = "rear right";
Blockly.Msg.THYMIO_PROX_CHECK_TOOLTIP = "Checks if a proximity sensor is blocked";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK = "%1 ground sensor detecting %2";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_BLACK = "black";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_LEFT = "left";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_NOPROX = "no proximity";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_PROX = "proximity";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_RIGHT = "right";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_TOOLTIP = "Checks if a proximity sensor is blocked";
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_WHITE = "white";
Blockly.Msg.THYMIO_SENSOR_ACC = "accelerometer %1 value";
Blockly.Msg.THYMIO_SENSOR_ACC_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_ACC_TOOLTIP = "Retrieves a accelerometer sensor value";
Blockly.Msg.THYMIO_SENSOR_ACC_X = "x";
Blockly.Msg.THYMIO_SENSOR_ACC_Y = "y";
Blockly.Msg.THYMIO_SENSOR_ACC_Z = "z";
Blockly.Msg.THYMIO_SENSOR_COMM = "received IR communication value";
Blockly.Msg.THYMIO_SENSOR_COMM_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_COMM_TOOLTIP = "Retrieves the received IR communication value";
Blockly.Msg.THYMIO_SENSOR_MIC = "microphone intensity value";
Blockly.Msg.THYMIO_SENSOR_MIC_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_MIC_TOOLTIP = "Retrieves the microphone intensity value";
Blockly.Msg.THYMIO_SENSOR_MOTOR = "%1 motor speed";
Blockly.Msg.THYMIO_SENSOR_MOTOR_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_MOTOR_LEFT = "left";
Blockly.Msg.THYMIO_SENSOR_MOTOR_RIGHT = "right";
Blockly.Msg.THYMIO_SENSOR_MOTOR_TOOLTIP = "Retrieves the speed of a motor";
Blockly.Msg.THYMIO_SENSOR_PROX = "%1 proximity sensor closeness";
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_LEFT = "front left";
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_LEFT_MIDDLE = "front left/middle";
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_MIDDLE = "front middle";
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_RIGHT = "front right";
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_RIGHT_MIDDLE = "front right/middle";
Blockly.Msg.THYMIO_SENSOR_PROX_GROUND_LEFT = "left ground";
Blockly.Msg.THYMIO_SENSOR_PROX_GROUND_RIGHT = "right ground";
Blockly.Msg.THYMIO_SENSOR_PROX_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_PROX_REAR_LEFT = "rear left";
Blockly.Msg.THYMIO_SENSOR_PROX_REAR_RIGHT = "rear right";
Blockly.Msg.THYMIO_SENSOR_PROX_TOOLTIP = "Retrieves the closeness of a proximity sensor";
Blockly.Msg.THYMIO_SENSOR_RC = "received remote control %1 value";
Blockly.Msg.THYMIO_SENSOR_RC_ADDRESS = "address";
Blockly.Msg.THYMIO_SENSOR_RC_COMMAND = "command";
Blockly.Msg.THYMIO_SENSOR_RC_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_RC_TOOLTIP = "Retrieves a remote control sensor value";
Blockly.Msg.THYMIO_SENSOR_TEMPERATURE = "temperature sensor value";
Blockly.Msg.THYMIO_SENSOR_TEMPERATURE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_SENSOR_TEMPERATURE_TOOLTIP = "Retrieves the temperature sensor value";
Blockly.Msg.THYMIO_SET_ARRAY = "set array %1 element %2 to %3";
Blockly.Msg.THYMIO_SET_ARRAY_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_SET_ARRAY_TOOLTIP = "Sets the value of an array element";
Blockly.Msg.THYMIO_SOUND_NOTE = "play %1 Hz note for %2 / 60 seconds";
Blockly.Msg.THYMIO_SOUND_NOTE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_SOUND_NOTE_TOOLTIP = "Plays a note of a frequency for a duration";
Blockly.Msg.THYMIO_SOUND_STOP = "stop playing sound";
Blockly.Msg.THYMIO_SOUND_STOP_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_SOUND_STOP_TOOLTIP = "Stops playing sound";
Blockly.Msg.THYMIO_SOUND_SYSTEM = "play %1 sound";
Blockly.Msg.THYMIO_SOUND_SYSTEM_ARROW = "arrow";
Blockly.Msg.THYMIO_SOUND_SYSTEM_CENTRAL = "central";
Blockly.Msg.THYMIO_SOUND_SYSTEM_COLLISION = "collision";
Blockly.Msg.THYMIO_SOUND_SYSTEM_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_SOUND_SYSTEM_SCARY = "scary";
Blockly.Msg.THYMIO_SOUND_SYSTEM_SHUTDOWN = "shutdown";
Blockly.Msg.THYMIO_SOUND_SYSTEM_STARTUP = "startup";
Blockly.Msg.THYMIO_SOUND_SYSTEM_TARGET_DETECTED = "target detected";
Blockly.Msg.THYMIO_SOUND_SYSTEM_TARGET_FRIENDLY = "target friendly";
Blockly.Msg.THYMIO_SOUND_SYSTEM_TOOLTIP = "Plays a system sound";
Blockly.Msg.THYMIO_SUBROUTINE_DEFINE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_SUBROUTINE_DEFINE_SUBROUTINE = "subroutine";
Blockly.Msg.THYMIO_SUBROUTINE_DEFINE_TOOLTIP = "Defines subroutines";
Blockly.Msg.THYMIO_UNARY_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_UNARY_TOOLTIP = "Performs unary operations";
Blockly.Msg.THYMIO_UNNARY = "%1 %2";
Blockly.Msg.THYMIO_UNNARY_ABSOLUTE = "absolute";
Blockly.Msg.THYMIO_UNNARY_BINARY_NOT = "binary not";
Blockly.Msg.THYMIO_UNNARY_NEGATIVE = "negative";
Blockly.Msg.THYMIO_VARIABLE_SET = "set %1 to %2";
Blockly.Msg.THYMIO_WHEN_DO = "do";
Blockly.Msg.THYMIO_WHEN_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";
Blockly.Msg.THYMIO_WHEN_TOOLTIP = "Check for a change of condition";
Blockly.Msg.THYMIO_WHEN_WHEN = "when";
Blockly.Msg.TODAY = "Today";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Create 'set %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returns the value of this variable.";
Blockly.Msg.VARIABLES_SET = "set %1 to %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Create 'get %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Sets this variable to be equal to the input.";
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;