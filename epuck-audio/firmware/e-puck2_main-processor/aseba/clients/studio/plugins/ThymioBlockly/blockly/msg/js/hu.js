// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.hu');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Megjegyzés hozzáadása";
Blockly.Msg.AUTH = "Kérjük, engedélyezd az alkalmazásnak munkád elmentését és megosztását.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Érték módosítása:";
Blockly.Msg.CHAT = "Ebben a mezőben tudsz a közreműködőkkel beszélgetni!";
Blockly.Msg.CLEAN_UP = "Clean up Blocks";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Blokkok összecsukása";
Blockly.Msg.COLLAPSE_BLOCK = "Blokk összecsukása";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "szín 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "szín 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "arány";
Blockly.Msg.COLOUR_BLEND_TITLE = "színkeverés";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Két színt kever össze a megadott arányban (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://hu.wikipedia.org/wiki/Szín";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Válassz színt a palettáról.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "véletlen szín";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Véletlenszerűen kiválasztott szín.";
Blockly.Msg.COLOUR_RGB_BLUE = "kék";
Blockly.Msg.COLOUR_RGB_GREEN = "zöld";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "vörös";
Blockly.Msg.COLOUR_RGB_TITLE = "Szín";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Szín előállítása a megadott vörös, zöld, és kék értékekkel.  Minden értéknek 0 és 100 közé kell esnie.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "befejezi az ismétlést";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "folytatja a következővel";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Megszakítja az utasítást tartalmazó ciklust.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Kihagyja a ciklus további részét, és elölről kezdi a következő elemmel.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Figyelem: Ez a blokk csak cikluson belül használható.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "minden %1 elemre a %2 listában";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "A '%1' változó minden lépésben megkapja a lista adott elemének értékét, és végrehajt vele néhány utasítást.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "számolj %1 értékével %2 és %3 között %4 lépésközzel";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "A(z) '%1' változó felveszi a kezdőérték és a végérték közötti értékeket a meghatározott lépésközzel. Eközben a meghatározott blokkokat hajtja végre.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Feltétel hozzáadása a ha blokkhoz.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Végső feltétel hozzáadása a ha blokkhoz.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "A ha blokk testreszabásához bővítsd, töröld vagy rendezd át a részeit.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "különben";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "különben ha";
Blockly.Msg.CONTROLS_IF_MSG_IF = "ha";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Ha a kifejezés igaz, akkor végrehajtja az utasításokat.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Ha a kifejezés igaz, akkor végrehajtja az első utasításblokkot. Különben a második utasításblokk kerül végrehajtásra.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Ha az első kifejezés igaz, akkor végrehajtja az első utasításblokkot. Különben, ha a második kifejezés igaz, akkor végrehajtja a második utasítás blokkot.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Ha az első kifejezés igaz, akkor végrehajtjuk az első utasítás blokkot.  Ha a második kifejezés igaz, akkor végrehajtjuk a második utasítás blokkot.  Amennyiben egyik kifejezés sem igaz, akkor az utolsó utasítás blokk kerül végrehajtásra.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://hu.wikipedia.org/wiki/Ciklus_(programoz%C3%A1s)#Sz.C3.A1ml.C3.A1l.C3.B3s_.28FOR.29_ciklus";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "ismételd %1 alkalommal";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Megadott kódrészlet ismételt végrehajtása.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "ismételd amíg nem";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "ismételd amíg";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Amíg a feltétel hamis, végrehajtja az utasításokat.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Amíg a feltétel igaz, végrehajtja az utasításokat.";
Blockly.Msg.DELETE_BLOCK = "Blokk törlése";
Blockly.Msg.DELETE_X_BLOCKS = "%1 blokk törlése";
Blockly.Msg.DISABLE_BLOCK = "Blokk letiltása";
Blockly.Msg.DUPLICATE_BLOCK = "Másolat";
Blockly.Msg.ENABLE_BLOCK = "Blokk engedélyezése";
Blockly.Msg.EXPAND_ALL = "Blokkok kibontása";
Blockly.Msg.EXPAND_BLOCK = "Blokk kibontása";
Blockly.Msg.EXTERNAL_INPUTS = "Külső kapcsolatok";
Blockly.Msg.HELP = "Súgó";
Blockly.Msg.INLINE_INPUTS = "Belső kapcsolatok";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "üres lista";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Elemeket nem tartalmazó üres listát ad eredményül";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Add, remove, or reorder sections to reconfigure this list block.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "Lista készítés, elemek:";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Elem hozzáadása listához.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Listát készít a megadott elemekből.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "az első";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "a végétől számított";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "az elejétől számított";
Blockly.Msg.LISTS_GET_INDEX_GET = "listából értéke";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "listából kivétele";
Blockly.Msg.LISTS_GET_INDEX_LAST = "az utolsó";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "bármely";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "listából törlése";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "elemnek";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "A lista első elemét adja eredményül.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "A lista megadott sorszámú elemét adja eredményül.  1 az utolsó elemet jelenti.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "A lista megadott sorszámú elemét adja eredményül.  1 az első elemet jelenti.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "A lista utolsó elemét adja eredményül.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "A lista véletlenszerűen választott elemét adja eredményül.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Az első elem kivétele a listából.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "A megadott sorszámú elem kivétele a listából 1 az utolsó elemet jelenti.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "A megadott sorszámú elem kivétele a listából 1 az első elemet jelenti.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Az utolsó elem kivétele a listából.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Véletlenszerűen választott elem kivétele a listából.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Az első elem törlése a listából.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "A megadott sorszámú elem törlése a listából 1 az utolsó elemet jelenti.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "A megadott sorszámú elem törlése a listából 1 az első elemet jelenti.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Az utolsó elem törlése a listából.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Véletlenszerűen választott elem törlése a listából.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "és a végétől számított";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "és az elejétől számított";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "és az utolsó";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "részlistája az első";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "részlistája a végétől számított";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "részlistája az elejétől számított";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "elem között";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "A lista adott részéről másolat.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "listában első előfordulásaː";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "listában utolsó előfordulásaː";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "A megadtott elem eslő vagy utolsó előfordulásával tér vissza.  0 esetén nincs ilyen eleme a listának.";
Blockly.Msg.LISTS_INLIST = "A(z)";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 üres lista?";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Az eredmény igaz, ha a lista nem tartalmaz elemeket.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "%1 lista hossza";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "A lista elemszámát adja eredményül.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "Lista készítése %1 elemet %2 alkalommal hozzáadva";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "A megadtott elem felhasználásával n elemű listát készít";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "elemkéntː";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "listába szúrd be";
Blockly.Msg.LISTS_SET_INDEX_SET = "listába állítsd be";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Beszúrás a lista elejére.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Beszúrás a megadott sorszámú elem elé a listában.  1 az utolsó elemet jelenti.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Beszúrás a megadott sorszámú elem elé a listában.  1 az első elemet jelenti.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Beszúrás a lista végére.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Beszúrás véletlenszerűen választott elem elé a listában.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Az első elem cseréje a listában.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "A megadott sorszámú elem cseréje a listában.  1 az utolsó elemet jelenti.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "A megadott sorszámú elem cseréje a listában.  1 az első elemet jelenti.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Az utolsó elem cseréje a listában.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Véletlenszerűen választott elem cseréje a listában.";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "lista készítése szövegből";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "sztring készítése listából";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "A lista elemeit összefűzi szöveggé a határoló karaktereket is felhasználva.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Listát készít a határoló karaktereknél törve a szöveget.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "határoló karakter";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "hamis";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Igaz, vagy hamis érték";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "igaz";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://hu.wikipedia.org/wiki/Egyenl%C5%91tlens%C3%A9g";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Igaz, ha a kifejezés két oldala egyenlő.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Igaz, ha a bal oldali kifejezés nagyobb, mint a jobb oldali.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Igaz, ha a bal oldali kifejezés nagyobb vagy egyenlő, mint a jobb oldali.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Igaz, ha a bal oldali kifejezés kisebb, mint a jobb oldali.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Igaz, ha a bal oldali kifejezés kisebb vagy egyenlő, mint a jobb oldali.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Igaz, ha a kifejezés két oldala nem egyenlő..";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "nem %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Igaz, ha a kifejezés hamis.  Hamis, ha a kifejezés igaz.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "null érték.";
Blockly.Msg.LOGIC_OPERATION_AND = "és";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "vagy";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Igaz, ha mindkét kifejezés igaz.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Igaz, ha legalább az egyik kifejezés igaz.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "vizsgáld meg:";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "érték, ha hamis:";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "érték, ha igaz:";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Kiértékeli a megvizsgálandó kifejezést. Ha a kifejezés igaz, visszatér az \"érték, ha igaz\" értékkel, különben az \"érték, ha hamis\" értékkel.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://hu.wikipedia.org/wiki/Matematikai_m%C5%B1velet";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Két szám összege.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Két szám hányadosa.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Két szám különbsége.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Két szám szorzata.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Az első számnak a második számmal megegyező hatványa.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://hu.wikipedia.org/wiki/JavaScript#Aritmetikai_oper.C3.A1torok";
Blockly.Msg.MATH_CHANGE_TITLE = "növeld %1 értékét %2 -vel";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "A \"%1\" változó értékének növelése egy számmal.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://hu.wikipedia.org/wiki/Matematikai_konstans";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Ismert matematikai konstans: π (3.141…), e (2.718…), φ (1.618…), gyök(2) (1.414…), gyök(½) (0.707…), vagy ∞ (végtelen).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "korlátozd %1 -t %2 és %3 közé";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Egy változó értékének korlátozása a megadott zárt intervallumra.";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "-nek osztója";
Blockly.Msg.MATH_IS_EVEN = "páros";
Blockly.Msg.MATH_IS_NEGATIVE = "negatív";
Blockly.Msg.MATH_IS_ODD = "páratlan";
Blockly.Msg.MATH_IS_POSITIVE = "pozitív";
Blockly.Msg.MATH_IS_PRIME = "prím";
Blockly.Msg.MATH_IS_TOOLTIP = "Ellenőrzi, hogy a szám páros, páratlan, prím, egész, pozitív vagy negatív-e, illetve osztható-e a másodikkal. Igaz, vagy hamis értéket ad eredményül.";
Blockly.Msg.MATH_IS_WHOLE = "egész";
Blockly.Msg.MATH_MODULO_HELPURL = "https://hu.wikipedia.org/wiki/Eg%C3%A9szr%C3%A9sz#Als.C3.B3_eg.C3.A9szr.C3.A9sz";
Blockly.Msg.MATH_MODULO_TITLE = "%1 ÷ %2 maradéka";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Az egész osztás maradékát adja eredméynül.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://hu.wikipedia.org/wiki/Sz%C3%A1m";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Egy szám.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "lista elemeinek átlaga";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "lista legnagyobb eleme";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "lista mediánja";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "lista legkisebb eleme";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "lista módusza";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "lista véletlen eleme";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "lista elemeinek szórása";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "lista elemeinek összege";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "A lista elemeinek átlagát adja eredményül.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "A lista legnagyobb elemét adja vissza.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "A lista elemeinek mediánját adja eredményül.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "A lista legkisebb elemét adja vissza.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "A lista elemeinek móduszát adja eredményül.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "A lista egy véletlen elemét adja eredményül.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "A lista elemeinek szórását adja eredményül.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "A lista elemeinek összegét adja eredményül.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://hu.wikipedia.org/wiki/V%C3%A9letlen";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "véletlen tört";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Véletlen tört érték 0.0 és 1.0 között.";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://hu.wikipedia.org/wiki/V%C3%A9letlen";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "véletlen egész szám %1 között %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Véletlen egész szám a megadott zárt intervallumon belül.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://hu.wikipedia.org/wiki/Eg%C3%A9szr%C3%A9sz#Kerek.C3.ADt.C3.A9s";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "kerekítsd";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "kerekítsd lefelé";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "kerekítsd felfelé";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Egy szám kerekítése felfelé vagy lefelé.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://hu.wikipedia.org/wiki/Gy%C3%B6kvon%C3%A1s";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "abszolútérték";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "négyzetgyök";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "A szám abszolútértéke.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Az e megadott számú hatványa.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "A szám természetes alapú logaritmusa.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "A szám 10-es alapú logaritmusa.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "A szám -1 szerese.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "A 10 megadott számú hatványa.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "A szám négyzetgyöke.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://hu.wikipedia.org/wiki/Sz%C3%B6gf%C3%BCggv%C3%A9nyek";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "A fokban megadott szög arkusz koszinusz értéke.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "A fokban megadott szög arkusz szinusz értéke.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "A fokban megadott szög arkusz tangens értéke.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "A fokban megadott szög koszinusz értéke.";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "A fokban megadott szög szinusz értéke.";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "A fokban megadott szög tangens értéke.";
Blockly.Msg.ME = "Én";
Blockly.Msg.NEW_VARIABLE = "Új változó...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Az új változó neve:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = ".";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "utasítások engedélyezése";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "paraméterlistaː";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://hu.wikipedia.org/wiki/F%C3%BCggv%C3%A9ny_(programoz%C3%A1s)";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Végrehajtja az eljárást.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://hu.wikipedia.org/wiki/F%C3%BCggv%C3%A9ny_(programoz%C3%A1s)";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Meghívja a függvényt.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "paraméterlistaː";
Blockly.Msg.PROCEDURES_CREATE_DO = "Create \"do %1\"";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "név";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "Eljárás";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Eljárás (nem ad vissza eredményt).";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "eredménye";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Függvény eredménnyel.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Figyelem: Az eljárásban azonos elnevezésű paramétert adtál meg.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Függvénydefiníció kiemelése";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Ha az érték igaz, akkor visszatér a függvény értékével.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Figyelem: Ez a blokk csak függvénydefiníción belül használható.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "változó:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Bemenet hozzáadása a függvényhez.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "paraméterek";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Bemenetek hozzáadása, eltávolítása vagy átrendezése ehhez a függvényhez.";
Blockly.Msg.REMOVE_COMMENT = "Megjegyzés törlése";
Blockly.Msg.RENAME_VARIABLE = "Változó átnevezése...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Minden \"%1\" változó átnevezése erre:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "szövegéhez fűzd hozzá";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "A";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Szöveget fűz a \"%1\" változó értékéhez.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "kisbetűs";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "Címként Formázott";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "NAGYBETŰS";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";
Blockly.Msg.TEXT_CHARAT_FIRST = "első";
Blockly.Msg.TEXT_CHARAT_FROM_END = "hátulról";
Blockly.Msg.TEXT_CHARAT_FROM_START = "elölről";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "A";
Blockly.Msg.TEXT_CHARAT_LAST = "utolsó";
Blockly.Msg.TEXT_CHARAT_RANDOM = "véletlen";
Blockly.Msg.TEXT_CHARAT_TAIL = "karaktere";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "A szöveg egy megadott karakterét adja eredményül.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Elem hozzáfűzése a szöveghez.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "fűzd össze";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Összefűzéssel, törléssel vagy rendezéssel kapcsolato sblokkok szöveg szerkesztéséhez.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "betűtől a hátulról számított";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "betűtől a(z)";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "betűtől az utolsó";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "a";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "szövegben válaszd ki az első";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "szövegben válaszd ki a hátulról a(z)";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "szövegben válaszd ki a(z)";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "betűig tartó betűsort";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "A megadott szövegrészletet adja eredményül.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "A(z)";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "szövegben az első előfordulásának helye";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "szövegben az utolsó előfordulásának helye";
Blockly.Msg.TEXT_INDEXOF_TAIL = "szövegnek";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "A keresett szöveg első vagy utolsó előfordulásával tér vissza.  0 esetén a szövegrészlet nem található.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 üres";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Igaz, ha a vizsgált szöveg hossza 0.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "fűzd össze";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Tetszőleges számú szövegrészletet fűz össze egybefüggő szöveggé.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "%1 hossza";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "A megadott szöveg karaktereinek számát adja eredményül (beleértve a szóközöket).";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "Üzenet %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Megejelníti a megadott kaakterláncot üzenetként a képernyőn.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Számot kér be a felhasználótól.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Szöveget kér be a felhasználótól.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "Kérj be számot";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "Kérj be szöveget";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://hu.wikipedia.org/wiki/String";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Egy betű, szó vagy szöveg egy sora.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "szóközök levágása mindkét végéről";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "szóközök levágása az elejéről";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "szóközök levágása a végéről";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Levágja a megadott szöveg végeiről a szóközöket.";
Blockly.Msg.THYMIO_ACTUATOR_COMM = "set IR communication to transmit to";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_COMM_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_COMM_TOOLTIP = "Sets the IR communication value to send";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_MIC = "set microphone threshold to";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_MIC_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_MIC_TOOLTIP = "Sets the microphone threshold";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_MOTOR = "set %1 motor speed to %2";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_MOTOR_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_MOTOR_LEFT = "left";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_MOTOR_RIGHT = "right";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_MOTOR_TOOLTIP = "Sets a motor speed on the robot";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_SET_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_SET_TOOLTIP = "Sets an actuator variable on the robot";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_TIMER = "set %1 timer period to %2 milliseconds";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_TIMER_FIRST = "first";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_TIMER_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_TIMER_SECOND = "second";  // untranslated
Blockly.Msg.THYMIO_ACTUATOR_TIMER_TOOLTIP = "Sets a timer period variable on the robot";  // untranslated
Blockly.Msg.THYMIO_ARITHMETIC_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_ARITHMETIC_TOOLTIP = "Computes arithmetic expressions";  // untranslated
Blockly.Msg.THYMIO_BINARY = "%2 binary %1 %3";  // untranslated
Blockly.Msg.THYMIO_BINARY_AND = "and";  // untranslated
Blockly.Msg.THYMIO_BINARY_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_BINARY_LEFT_SHIFT = "left shift";  // untranslated
Blockly.Msg.THYMIO_BINARY_OR = "or";  // untranslated
Blockly.Msg.THYMIO_BINARY_RIGHT_SHIFT = "right shift";  // untranslated
Blockly.Msg.THYMIO_BINARY_TOOLTIP = "Computes binary expressions";  // untranslated
Blockly.Msg.THYMIO_BINARY_XOR = "xor";  // untranslated
Blockly.Msg.THYMIO_BUTTON_PRESSED = "%1 button touched";  // untranslated
Blockly.Msg.THYMIO_BUTTON_PRESSED_BACKWARD = "backward";  // untranslated
Blockly.Msg.THYMIO_BUTTON_PRESSED_CENTER = "center";  // untranslated
Blockly.Msg.THYMIO_BUTTON_PRESSED_FORWARD = "forward";  // untranslated
Blockly.Msg.THYMIO_BUTTON_PRESSED_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_BUTTON_PRESSED_LEFT = "left";  // untranslated
Blockly.Msg.THYMIO_BUTTON_PRESSED_RIGHT = "right";  // untranslated
Blockly.Msg.THYMIO_BUTTON_PRESSED_TOOLTIP = "Checks if a button is pressed";  // untranslated
Blockly.Msg.THYMIO_COMMUNICATION = "%1 IR communication";  // untranslated
Blockly.Msg.THYMIO_COMMUNICATION_DISABLE = "disable";  // untranslated
Blockly.Msg.THYMIO_COMMUNICATION_ENABLE = "enable";  // untranslated
Blockly.Msg.THYMIO_COMMUNICATION_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_COMMUNICATION_TOOLTIP = "Controls the communication feature of the robot";  // untranslated
Blockly.Msg.THYMIO_DECLARE_ARRAY = "declare %1 as array of size %2";  // untranslated
Blockly.Msg.THYMIO_DECLARE_ARRAY_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_DECLARE_ARRAY_TOOLTIP = "Declares an array of a certain size";  // untranslated
Blockly.Msg.THYMIO_EVENT_BUTTON = "on %1 button %2";  // untranslated
Blockly.Msg.THYMIO_EVENT_BUTTON_BACKWARD = "backward";  // untranslated
Blockly.Msg.THYMIO_EVENT_BUTTON_CENTER = "center";  // untranslated
Blockly.Msg.THYMIO_EVENT_BUTTON_FORWARD = "forward";  // untranslated
Blockly.Msg.THYMIO_EVENT_BUTTON_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_EVENT_BUTTON_LEFT = "left";  // untranslated
Blockly.Msg.THYMIO_EVENT_BUTTON_PRESS = "touched";  // untranslated
Blockly.Msg.THYMIO_EVENT_BUTTON_RELEASE = "released";  // untranslated
Blockly.Msg.THYMIO_EVENT_BUTTON_RIGHT = "right";  // untranslated
Blockly.Msg.THYMIO_EVENT_BUTTON_TOOLTIP = "React to a button press or release event";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX = "on %1 sensor detecting %2";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_LEFT = "front left";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_LEFT_MIDDLE = "front left/middle";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_MIDDLE = "front middle";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_RIGHT = "front right";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_FRONT_RIGHT_MIDDLE = "front right/middle";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_GROUND = "on %1 ground sensor detecting %2";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_BLACK = "black";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_LEFT = "left";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_NOPROX = "no proximity";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_PROX = "proximity";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_RIGHT = "right";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_TOOLTIP = "React to a ground proximity event";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_GROUND_WHITE = "white";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_NOPROX = "no proximity";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_PROX = "proximity";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_REAR_LEFT = "rear left";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_REAR_RIGHT = "rear right";  // untranslated
Blockly.Msg.THYMIO_EVENT_PROX_TOOLTIP = "React to a proximity event";  // untranslated
Blockly.Msg.THYMIO_EVENT_RECEIVE = "on %1 received";  // untranslated
Blockly.Msg.THYMIO_EVENT_RECEIVE_COMM = "IR communication";  // untranslated
Blockly.Msg.THYMIO_EVENT_RECEIVE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_EVENT_RECEIVE_RC = "remote control signal";  // untranslated
Blockly.Msg.THYMIO_EVENT_RECEIVE_TOOLTIP = "React to a receive event";  // untranslated
Blockly.Msg.THYMIO_EVENT_SHOCK = "on shock detected";  // untranslated
Blockly.Msg.THYMIO_EVENT_SHOCK_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_EVENT_SHOCK_TOOLTIP = "React to a shock event";  // untranslated
Blockly.Msg.THYMIO_EVENT_SOUND = "on sound %1";  // untranslated
Blockly.Msg.THYMIO_EVENT_SOUND_FINISHED = "finished playing";  // untranslated
Blockly.Msg.THYMIO_EVENT_SOUND_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_EVENT_SOUND_MIC = "intensity above threshold";  // untranslated
Blockly.Msg.THYMIO_EVENT_SOUND_TOOLTIP = "React to a sound event";  // untranslated
Blockly.Msg.THYMIO_EVENT_TIMER = "on %1 timer expired";  // untranslated
Blockly.Msg.THYMIO_EVENT_TIMER_FIRST = "first";  // untranslated
Blockly.Msg.THYMIO_EVENT_TIMER_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_EVENT_TIMER_SECOND = "second";  // untranslated
Blockly.Msg.THYMIO_EVENT_TIMER_TOOLTIP = "React to an expired timer event";  // untranslated
Blockly.Msg.THYMIO_EVENT_UPDATE = "on %1 updated";  // untranslated
Blockly.Msg.THYMIO_EVENT_UPDATE_ACC = "accelerometer";  // untranslated
Blockly.Msg.THYMIO_EVENT_UPDATE_BUTTONS = "button values";  // untranslated
Blockly.Msg.THYMIO_EVENT_UPDATE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_EVENT_UPDATE_MOTOR = "motor";  // untranslated
Blockly.Msg.THYMIO_EVENT_UPDATE_PROX = "proximity sensors";  // untranslated
Blockly.Msg.THYMIO_EVENT_UPDATE_TEMPERATURE = "temperature";  // untranslated
Blockly.Msg.THYMIO_EVENT_UPDATE_TOOLTIP = "React to an update event";  // untranslated
Blockly.Msg.THYMIO_FOR_DO = "do";  // untranslated
Blockly.Msg.THYMIO_FOR_FOR = "for";  // untranslated
Blockly.Msg.THYMIO_FOR_FROM = "from";  // untranslated
Blockly.Msg.THYMIO_FOR_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_FOR_TO = "to";  // untranslated
Blockly.Msg.THYMIO_FOR_TOOLTIP = "Counts a variable up from a start to an end value";  // untranslated
Blockly.Msg.THYMIO_GET_ARRAY = "array %1 element %2";  // untranslated
Blockly.Msg.THYMIO_GET_ARRAY_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_GET_ARRAY_TOOLTIP = "Gets the value of an array element";  // untranslated
Blockly.Msg.THYMIO_LED = "set %1 LED to %2";  // untranslated
Blockly.Msg.THYMIO_LED_BOTTOM_LEFT = "bottom left";  // untranslated
Blockly.Msg.THYMIO_LED_BOTTOM_RIGHT = "bottom right";  // untranslated
Blockly.Msg.THYMIO_LED_BUTTON = "set button LEDs to forward %1 right %2 backward %3 left %4";  // untranslated
Blockly.Msg.THYMIO_LED_BUTTON_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_LED_BUTTON_TOOLTIP = "Sets the button LEDs";  // untranslated
Blockly.Msg.THYMIO_LED_CIRCLE = "set circle LEDs to forward %1 forward right %2 right %3 backward right %4 backward %5 backward left %6 left %7 forward left %8";  // untranslated
Blockly.Msg.THYMIO_LED_CIRCLE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_LED_CIRCLE_TOOLTIP = "Sets the circle LEDs";  // untranslated
Blockly.Msg.THYMIO_LED_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_LED_OFF = "turn off %1";  // untranslated
Blockly.Msg.THYMIO_LED_OFF_BOTTOM_LEFT = "bottom left LED";  // untranslated
Blockly.Msg.THYMIO_LED_OFF_BOTTOM_RIGHT = "bottom right LED";  // untranslated
Blockly.Msg.THYMIO_LED_OFF_BUTTONS = "button LEDs";  // untranslated
Blockly.Msg.THYMIO_LED_OFF_CIRCLE = "circle LEDs";  // untranslated
Blockly.Msg.THYMIO_LED_OFF_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_LED_OFF_MICROPHONE = "microphone LED";  // untranslated
Blockly.Msg.THYMIO_LED_OFF_PROX_H = "horizontal proximity LEDs";  // untranslated
Blockly.Msg.THYMIO_LED_OFF_PROX_V = "ground proximity LEDs";  // untranslated
Blockly.Msg.THYMIO_LED_OFF_RC = "remote control LED";  // untranslated
Blockly.Msg.THYMIO_LED_OFF_TEMPERATURE = "temperature LEDs";  // untranslated
Blockly.Msg.THYMIO_LED_OFF_TOOLTIP = "Turns off a LED";  // untranslated
Blockly.Msg.THYMIO_LED_OFF_TOP = "top LED";  // untranslated
Blockly.Msg.THYMIO_LED_PROX = "set horizontal proximity LEDs to front left %1 front left/middle %2 front middle/left %3 front middle/right %4 front right/middle %5 front right %6 rear left %7 rear right %8";  // untranslated
Blockly.Msg.THYMIO_LED_PROX_GROUND = "set ground proximity LEDs to left %1 right %2";  // untranslated
Blockly.Msg.THYMIO_LED_PROX_GROUND_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_LED_PROX_GROUND_TOOLTIP = "Sets the ground proximity LEDs";  // untranslated
Blockly.Msg.THYMIO_LED_PROX_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_LED_PROX_TOOLTIP = "Sets the horizontal proximity LEDs";  // untranslated
Blockly.Msg.THYMIO_LED_RC_SOUND = "set %1 LED to %2";  // untranslated
Blockly.Msg.THYMIO_LED_RC_SOUND_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_LED_RC_SOUND_RC = "remote control";  // untranslated
Blockly.Msg.THYMIO_LED_RC_SOUND_SOUND = "microphone";  // untranslated
Blockly.Msg.THYMIO_LED_RC_SOUND_TOOLTIP = "Sets the remote control and sound LEDs";  // untranslated
Blockly.Msg.THYMIO_LED_RGB = "set %1 LED to red %2 green %3 blue %4";  // untranslated
Blockly.Msg.THYMIO_LED_RGB_BOTTOM_LEFT = "bottom left";  // untranslated
Blockly.Msg.THYMIO_LED_RGB_BOTTOM_RIGHT = "bottom right";  // untranslated
Blockly.Msg.THYMIO_LED_RGB_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_LED_RGB_TOOLTIP = "Sets a LED to a specified color by RGB values";  // untranslated
Blockly.Msg.THYMIO_LED_RGB_TOP = "top";  // untranslated
Blockly.Msg.THYMIO_LED_TEMPERATURE = "set temperature LEDs to red %1 blue %2";  // untranslated
Blockly.Msg.THYMIO_LED_TEMPERATURE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_LED_TEMPERATURE_TOOLTIP = "Sets the temperature LEDs";  // untranslated
Blockly.Msg.THYMIO_LED_TOOLTIP = "Sets a LED to a specified color";  // untranslated
Blockly.Msg.THYMIO_LED_TOP = "top";  // untranslated
Blockly.Msg.THYMIO_MOTORS_START = "start %1 with speed %2";  // untranslated
Blockly.Msg.THYMIO_MOTORS_START_BACKWARD = "driving backward";  // untranslated
Blockly.Msg.THYMIO_MOTORS_START_FORWARD = "driving forward";  // untranslated
Blockly.Msg.THYMIO_MOTORS_START_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_MOTORS_START_SPINCCW = "spinning counterclockwise";  // untranslated
Blockly.Msg.THYMIO_MOTORS_START_SPINCW = "spinning clockwise";  // untranslated
Blockly.Msg.THYMIO_MOTORS_START_TOOLTIP = "Starts the motors";  // untranslated
Blockly.Msg.THYMIO_MOTORS_START_TURNBACKWARDLEFT = "turning backward left";  // untranslated
Blockly.Msg.THYMIO_MOTORS_START_TURNBACKWARDRIGHT = "turning backward right";  // untranslated
Blockly.Msg.THYMIO_MOTORS_START_TURNLEFT = "turning left";  // untranslated
Blockly.Msg.THYMIO_MOTORS_START_TURNRIGHT = "turning right";  // untranslated
Blockly.Msg.THYMIO_MOTORS_STOP = "stop motors";  // untranslated
Blockly.Msg.THYMIO_MOTORS_STOP_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_MOTORS_STOP_TOOLTIP = "Stops the motors";  // untranslated
Blockly.Msg.THYMIO_PROX_CHECK = "%1 sensor detecting %2";  // untranslated
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_LEFT = "front left";  // untranslated
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_LEFT_MIDDLE = "front left/middle";  // untranslated
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_MIDDLE = "front middle";  // untranslated
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_RIGHT = "front right";  // untranslated
Blockly.Msg.THYMIO_PROX_CHECK_FRONT_RIGHT_MIDDLE = "front right/middle";  // untranslated
Blockly.Msg.THYMIO_PROX_CHECK_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_PROX_CHECK_NOPROX = "no proximity";  // untranslated
Blockly.Msg.THYMIO_PROX_CHECK_PROX = "proximity";  // untranslated
Blockly.Msg.THYMIO_PROX_CHECK_REAR_LEFT = "rear left";  // untranslated
Blockly.Msg.THYMIO_PROX_CHECK_REAR_RIGHT = "rear right";  // untranslated
Blockly.Msg.THYMIO_PROX_CHECK_TOOLTIP = "Checks if a proximity sensor is blocked";  // untranslated
Blockly.Msg.THYMIO_PROX_GROUND_CHECK = "%1 ground sensor detecting %2";  // untranslated
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_BLACK = "black";  // untranslated
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_LEFT = "left";  // untranslated
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_NOPROX = "no proximity";  // untranslated
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_PROX = "proximity";  // untranslated
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_RIGHT = "right";  // untranslated
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_TOOLTIP = "Checks if a proximity sensor is blocked";  // untranslated
Blockly.Msg.THYMIO_PROX_GROUND_CHECK_WHITE = "white";  // untranslated
Blockly.Msg.THYMIO_SENSOR_ACC = "accelerometer %1 value";  // untranslated
Blockly.Msg.THYMIO_SENSOR_ACC_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_SENSOR_ACC_TOOLTIP = "Retrieves a accelerometer sensor value";  // untranslated
Blockly.Msg.THYMIO_SENSOR_ACC_X = "x";  // untranslated
Blockly.Msg.THYMIO_SENSOR_ACC_Y = "y";  // untranslated
Blockly.Msg.THYMIO_SENSOR_ACC_Z = "z";  // untranslated
Blockly.Msg.THYMIO_SENSOR_COMM = "received IR communication value";  // untranslated
Blockly.Msg.THYMIO_SENSOR_COMM_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_SENSOR_COMM_TOOLTIP = "Retrieves the received IR communication value";  // untranslated
Blockly.Msg.THYMIO_SENSOR_MIC = "microphone intensity value";  // untranslated
Blockly.Msg.THYMIO_SENSOR_MIC_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_SENSOR_MIC_TOOLTIP = "Retrieves the microphone intensity value";  // untranslated
Blockly.Msg.THYMIO_SENSOR_MOTOR = "%1 motor speed";  // untranslated
Blockly.Msg.THYMIO_SENSOR_MOTOR_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_SENSOR_MOTOR_LEFT = "left";  // untranslated
Blockly.Msg.THYMIO_SENSOR_MOTOR_RIGHT = "right";  // untranslated
Blockly.Msg.THYMIO_SENSOR_MOTOR_TOOLTIP = "Retrieves the speed of a motor";  // untranslated
Blockly.Msg.THYMIO_SENSOR_PROX = "%1 proximity sensor closeness";  // untranslated
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_LEFT = "front left";  // untranslated
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_LEFT_MIDDLE = "front left/middle";  // untranslated
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_MIDDLE = "front middle";  // untranslated
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_RIGHT = "front right";  // untranslated
Blockly.Msg.THYMIO_SENSOR_PROX_FRONT_RIGHT_MIDDLE = "front right/middle";  // untranslated
Blockly.Msg.THYMIO_SENSOR_PROX_GROUND_LEFT = "left ground";  // untranslated
Blockly.Msg.THYMIO_SENSOR_PROX_GROUND_RIGHT = "right ground";  // untranslated
Blockly.Msg.THYMIO_SENSOR_PROX_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_SENSOR_PROX_REAR_LEFT = "rear left";  // untranslated
Blockly.Msg.THYMIO_SENSOR_PROX_REAR_RIGHT = "rear right";  // untranslated
Blockly.Msg.THYMIO_SENSOR_PROX_TOOLTIP = "Retrieves the closeness of a proximity sensor";  // untranslated
Blockly.Msg.THYMIO_SENSOR_RC = "received remote control %1 value";  // untranslated
Blockly.Msg.THYMIO_SENSOR_RC_ADDRESS = "address";  // untranslated
Blockly.Msg.THYMIO_SENSOR_RC_COMMAND = "command";  // untranslated
Blockly.Msg.THYMIO_SENSOR_RC_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_SENSOR_RC_TOOLTIP = "Retrieves a remote control sensor value";  // untranslated
Blockly.Msg.THYMIO_SENSOR_TEMPERATURE = "temperature sensor value";  // untranslated
Blockly.Msg.THYMIO_SENSOR_TEMPERATURE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_SENSOR_TEMPERATURE_TOOLTIP = "Retrieves the temperature sensor value";  // untranslated
Blockly.Msg.THYMIO_SET_ARRAY = "set array %1 element %2 to %3";  // untranslated
Blockly.Msg.THYMIO_SET_ARRAY_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_SET_ARRAY_TOOLTIP = "Sets the value of an array element";  // untranslated
Blockly.Msg.THYMIO_SOUND_NOTE = "play %1 Hz note for %2 / 60 seconds";  // untranslated
Blockly.Msg.THYMIO_SOUND_NOTE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_SOUND_NOTE_TOOLTIP = "Plays a note of a frequency for a duration";  // untranslated
Blockly.Msg.THYMIO_SOUND_STOP = "stop playing sound";  // untranslated
Blockly.Msg.THYMIO_SOUND_STOP_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_SOUND_STOP_TOOLTIP = "Stops playing sound";  // untranslated
Blockly.Msg.THYMIO_SOUND_SYSTEM = "play %1 sound";  // untranslated
Blockly.Msg.THYMIO_SOUND_SYSTEM_ARROW = "arrow";  // untranslated
Blockly.Msg.THYMIO_SOUND_SYSTEM_CENTRAL = "central";  // untranslated
Blockly.Msg.THYMIO_SOUND_SYSTEM_COLLISION = "collision";  // untranslated
Blockly.Msg.THYMIO_SOUND_SYSTEM_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_SOUND_SYSTEM_SCARY = "scary";  // untranslated
Blockly.Msg.THYMIO_SOUND_SYSTEM_SHUTDOWN = "shutdown";  // untranslated
Blockly.Msg.THYMIO_SOUND_SYSTEM_STARTUP = "startup";  // untranslated
Blockly.Msg.THYMIO_SOUND_SYSTEM_TARGET_DETECTED = "target detected";  // untranslated
Blockly.Msg.THYMIO_SOUND_SYSTEM_TARGET_FRIENDLY = "target friendly";  // untranslated
Blockly.Msg.THYMIO_SOUND_SYSTEM_TOOLTIP = "Plays a system sound";  // untranslated
Blockly.Msg.THYMIO_SUBROUTINE_DEFINE_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_SUBROUTINE_DEFINE_SUBROUTINE = "subroutine";  // untranslated
Blockly.Msg.THYMIO_SUBROUTINE_DEFINE_TOOLTIP = "Defines subroutines";  // untranslated
Blockly.Msg.THYMIO_UNARY_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_UNARY_TOOLTIP = "Performs unary operations";  // untranslated
Blockly.Msg.THYMIO_UNNARY = "%1 %2";  // untranslated
Blockly.Msg.THYMIO_UNNARY_ABSOLUTE = "absolute";  // untranslated
Blockly.Msg.THYMIO_UNNARY_BINARY_NOT = "binary not";  // untranslated
Blockly.Msg.THYMIO_UNNARY_NEGATIVE = "negative";  // untranslated
Blockly.Msg.THYMIO_VARIABLE_SET = "set %1 to %2";  // untranslated
Blockly.Msg.THYMIO_WHEN_DO = "do";  // untranslated
Blockly.Msg.THYMIO_WHEN_HELPURL = "https://www.thymio.org/en:thymiotutorielp2";  // untranslated
Blockly.Msg.THYMIO_WHEN_TOOLTIP = "Check for a change of condition";  // untranslated
Blockly.Msg.THYMIO_WHEN_WHEN = "when";  // untranslated
Blockly.Msg.TODAY = "Ma";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "változó";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Készíts \"%1=\"";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "A változó értékét adja eredményül.";
Blockly.Msg.VARIABLES_SET = "%1 %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Készíts \"%1\"";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "A változónak adhatunk értéket.";
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;